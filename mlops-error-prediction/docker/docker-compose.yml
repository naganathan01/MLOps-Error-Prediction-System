version: '3.8'

services:
  mlops-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: mlops-error-prediction
    ports:
      - "8000:8000"
    volumes:
      - ../data:/app/data
      - ../models:/app/models
      - ../logs:/app/logs
      - ../mlruns:/app/mlruns
    environment:
      - PYTHONPATH=/app
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DATABASE_URL=sqlite:///./data/mlops_error_prediction.db
      - MLFLOW_TRACKING_URI=file:./mlruns
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mlops-network

  # Optional: MLflow UI (uncomment if needed)
  # mlflow-ui:
  #   image: python:3.9-slim
  #   container_name: mlflow-ui
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ../mlruns:/mlruns
  #   command: >
  #     sh -c "pip install mlflow && 
  #            mlflow ui --host 0.0.0.0 --port 5000 --backend-store-uri file:///mlruns"
  #   networks:
  #     - mlops-network

  # Optional: Prometheus for monitoring (uncomment if needed)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - mlops-network

  # Optional: Grafana for visualization (uncomment if needed)
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-storage:/var/lib/grafana
  #   networks:
  #     - mlops-network

networks:
  mlops-network:
    driver: bridge

volumes:
  grafana-storage: